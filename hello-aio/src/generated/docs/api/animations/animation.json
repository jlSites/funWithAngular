{
  "id": "api/animations/animation",
  "title": "animation",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"animation\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/animation#animation\"><i class=\"material-icons\">link</i></a>animation</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/animations\">@angular/animations</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { animation } from <a href=\"api/animations\">@angular/animations</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/animations/src/animation_metadata.ts#L735-L775\">animations/src/animation_metadata.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  \n<code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\nfunction animation(steps: AnimationMetadata | AnimationMetadata[], options: AnimationOptions | null): AnimationReferenceMetadata;\n</code-example>\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/animation#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p><code><a href=\"api/animations/animation\">animation</a></code> is an animation-specific function that is designed to be used inside of Angular's\nanimation DSL language.</p>\n<p><code>var myAnimation = animation(...)</code> is designed to produce a reusable animation that can be later\ninvoked in another animation or sequence. Reusable animations are designed to make use of\nanimation parameters and the produced animation can be used via the <code><a href=\"api/animations/useAnimation\">useAnimation</a></code> method.</p>\n<code-example>\nvar fadeAnimation = animation([\n  style({ opacity: '{{ start }}' }),\n  animate('{{ time }}',\n    style({ opacity: '{{ end }}'))\n], { params: { time: '1000ms', start: 0, end: 1 }});\n</code-example>\n<p>If parameters are attached to an animation then they act as <strong>default parameter values</strong>. When an\nanimation is invoked via <code><a href=\"api/animations/useAnimation\">useAnimation</a></code> then parameter values are allowed to be passed in\ndirectly. If any of the passed in parameter values are missing then the default values will be\nused.</p>\n<code-example>\nuseAnimation(fadeAnimation, {\n  params: {\n    time: '2s',\n    start: 1,\n    end: 0\n  }\n})\n</code-example>\n<p>If one or more parameter values are missing before animated then an error will be thrown.</p>\n\n</section>\n\n\n\n\n\n</section></article>"
}