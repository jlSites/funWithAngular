{
  "id": "api/animations/group",
  "title": "group",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"group\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/group#group\"><i class=\"material-icons\">link</i></a>group</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/animations\">@angular/animations</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { group } from <a href=\"api/animations\">@angular/animations</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/animations/src/animation_metadata.ts#L398-L433\">animations/src/animation_metadata.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  \n<code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\nfunction group(steps: AnimationMetadata[], options: AnimationOptions | null): AnimationGroupMetadata;\n</code-example>\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/group#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p><code>group</code> is an animation-specific function that is designed to be used inside of Angular's\nanimation DSL language. If this information is new, please navigate to the <a href=\"api/core/Component#animations\">component animations metadata page</a> to gain a better understanding of\nhow animations in Angular are used.</p>\n<p><code>group</code> specifies a list of animation steps that are all run in parallel. Grouped animations are\nuseful when a series of styles must be animated/closed off at different starting/ending times.</p>\n<p>The <code>group</code> function can either be used within a <a href=\"api/animations/sequence\">sequence</a> or a <a href=\"api/animations/transition\">transition</a> and it will only continue to the next instruction once all of the inner animation\nsteps have completed.</p>\n<h3 id=\"usage\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/group#usage\"><i class=\"material-icons\">link</i></a>Usage</h3>\n<p>The <code>steps</code> data that is passed into the <code>group</code> animation function can either consist of <a href=\"api/animations/style\">style</a> or <a href=\"api/animations/animate\">animate</a> function calls. Each call to <code>style()</code> or <code>animate()</code>\nwithin a group will be executed instantly (use <a href=\"api/animations/keyframes\">keyframes</a> or a <a href=\"api/animations/animate#usage\">animate() with a delay value</a> to offset styles to be applied at a later time).</p>\n<code-example language=\"typescript\">\ngroup([\n  animate(\"1s\", { background: \"black\" }))\n  animate(\"2s\", { color: \"white\" }))\n])\n</code-example>\n<code-example>\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Component, NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@Component({\n  selector: 'example-app',\n  styles: [`\n    .toggle-container {\n      background-color:white;\n      border:10px solid black;\n      width:200px;\n      text-align:center;\n      line-height:100px;\n      font-size:50px;\n      box-sizing:border-box;\n      overflow:hidden;\n    }\n  `],\n  animations: [trigger(\n      'openClose',\n      [\n        state('collapsed, void', style({height: '0px', color: 'maroon', borderColor: 'maroon'})),\n        state('expanded', style({height: '*', borderColor: 'green', color: 'green'})),\n        transition(\n            'collapsed &#x3C;=> expanded', [animate(500, style({height: '250px'})), animate(500)])\n      ])],\n  template: `\n    &#x3C;button (click)=\"expand()\">Open&#x3C;/button>\n    &#x3C;button (click)=\"collapse()\">Closed&#x3C;/button>\n    &#x3C;hr />\n    &#x3C;div class=\"toggle-container\" [@openClose]=\"stateExpression\">\n      Look at this box\n    &#x3C;/div>\n  `\n})\nexport class MyExpandoCmp {\n  stateExpression: string;\n  constructor() { this.collapse(); }\n  expand() { this.stateExpression = 'expanded'; }\n  collapse() { this.stateExpression = 'collapsed'; }\n}\n\n@NgModule(\n    {imports: [BrowserAnimationsModule], declarations: [MyExpandoCmp], bootstrap: [MyExpandoCmp]})\nexport class AppModule {\n}\n\n\n</code-example>\n\n</section>\n\n\n\n\n\n</section></article>"
}