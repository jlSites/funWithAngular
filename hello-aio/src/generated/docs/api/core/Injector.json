{
  "id": "api/core/Injector",
  "title": "Injector",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"injector\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#injector\"><i class=\"material-icons\">link</i></a>Injector</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { Injector } from <a href=\"api/core\">@angular/core</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/core/src/di/injector.ts#L25-L63\">core/src/di/injector.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Injector interface</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass Injector {\n  <a class=\"code-anchor\" href=\"api/core/Injector#THROW_IF_NOT_FOUND\">static THROW_IF_NOT_FOUND: _THROW_IF_NOT_FOUND</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#NULL\">static NULL: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/Injector#get\">get&#x3C;T>(token: Type&#x3C;T>|InjectionToken&#x3C;T>, notFoundValue?: T): T</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <code-example>\nconst injector: Injector = ...;\ninjector.get(...);\n</code-example>\n\n</section>\n\n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>For more details, see the <a href=\"guide/dependency-injection\">\"Dependency Injection Guide\"</a>.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst injector: Injector =\n    ReflectiveInjector.resolveAndCreate([{provide: 'validToken', useValue: 'Value'}]);\nexpect(injector.get('validToken')).toEqual('Value');\nexpect(() => injector.get('invalidToken')).toThrowError();\nexpect(injector.get('invalidToken', 'notFound')).toEqual('notFound');\n\n</code-example>\n<p><code><a href=\"api/core/Injector\">Injector</a></code> returns itself when given <code><a href=\"api/core/Injector\">Injector</a></code> as a token:\n<code-example>\nconst injector = ReflectiveInjector.resolveAndCreate([]);\nexpect(injector.get(Injector)).toBe(injector);\n\n</code-example></p>\n\n</section>\n\n\n\n<section class=\"static-members\">\n  <h2 id=\"static-members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#static-members\"><i class=\"material-icons\">link</i></a>Static Members</h2>\n  \n    <div class=\"static-member\">\n  <a id=\"THROW_IF_NOT_FOUND\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">static THROW_IF_NOT_FOUND: _THROW_IF_NOT_FOUND</code-example>\n  \n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"static-member\">\n  <a id=\"NULL\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">static NULL: Injector</code-example>\n  \n  </div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Injector#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get&#x3C;T>(token: Type&#x3C;T>|InjectionToken&#x3C;T>, notFoundValue?: T): T</code-example>\n  <p>Retrieves an instance from the injector based on the provided token.\nIf not found:</p>\n<ul>\n<li>Throws an error if no <code>notFoundValue</code> that is not equal to\nInjector.THROW_IF_NOT_FOUND is given</li>\n<li>Returns the <code>notFoundValue</code> otherwise</li>\n</ul>\n\n  </div>\n\n    \n    <details class=\"overloads\">\n      <summary>Overloads</summary>\n      <div class=\"detail-contents\">\n        \n        <div class=\"instance-member-overload\">\n  <a id=\"get(token:%20any,%20notFoundValue?:%20any)\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get(token: any, notFoundValue?: any): any</code-example>\n  \n  </div>\n\n        \n        \n      </div>\n    </details>\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>"
}