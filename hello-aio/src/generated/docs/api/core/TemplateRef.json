{
  "id": "api/core/TemplateRef",
  "title": "TemplateRef",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"templateref\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#templateref\"><i class=\"material-icons\">link</i></a>TemplateRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { TemplateRef } from <a href=\"api/core\">@angular/core</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/core/src/linker/template_ref.ts#L11-L42\">core/src/linker/template_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass TemplateRef&#x3C;C> {\n  <a class=\"code-anchor\" href=\"api/core/TemplateRef#elementRef\">get elementRef(): ElementRef</a>\n  <a class=\"code-anchor\" href=\"api/core/TemplateRef#createEmbeddedView\">createEmbeddedView(context: C): EmbeddedViewRef&#x3C;C></a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Represents an Embedded Template that can be used to instantiate Embedded Views.</p>\n<p>You can access a <code><a href=\"api/core/TemplateRef\">TemplateRef</a></code>, in two ways. Via a directive placed on a <code>&#x3C;ng-template></code> element\n(or directive prefixed with <code>*</code>) and have the <code><a href=\"api/core/TemplateRef\">TemplateRef</a></code> for this Embedded View injected into\nthe constructor of the directive using the <code><a href=\"api/core/TemplateRef\">TemplateRef</a></code> Token. Alternatively you can query for\nthe <code><a href=\"api/core/TemplateRef\">TemplateRef</a></code> from a Component or a Directive via <a href=\"api/core/Query\"><code><a href=\"api/core/Query\">Query</a></code></a>.</p>\n<p>To instantiate Embedded Views based on a Template, use\n<a href=\"api/core/ViewContainerRef#createEmbeddedView\"><code><a href=\"api/core/ViewContainerRef\">ViewContainerRef</a></code></a>, which will create the View and attach it to the\nView Container.</p>\n\n</section>\n\n\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"elementRef\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get elementRef(): ElementRef</code-example>\n  <p>The location in the View where the Embedded View logically belongs to.</p>\n<p>The data-binding and injection contexts of Embedded Views created from this <code><a href=\"api/core/TemplateRef\">TemplateRef</a></code>\ninherit from the contexts of this location.</p>\n<p>Typically new Embedded Views are attached to the View Container of this location, but in\nadvanced use-cases, the View can be attached to a different container while keeping the\ndata-binding and injection context from the original location.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"createEmbeddedView\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">createEmbeddedView(context: C): EmbeddedViewRef&#x3C;C></code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>"
}