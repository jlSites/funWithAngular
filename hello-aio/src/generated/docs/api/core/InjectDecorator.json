{
  "id": "api/core/InjectDecorator",
  "title": "InjectDecorator",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"injectdecorator\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectDecorator#injectdecorator\"><i class=\"material-icons\">link</i></a>InjectDecorator</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { InjectDecorator } from <a href=\"api/core\">@angular/core</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/core/src/di/metadata.ts#L10-L46\">core/src/di/metadata.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectDecorator#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface InjectDecorator { \n  <a class=\"code-anchor\" href=\"api/core/InjectDecorator#call\">(token: any): any</a>\n  <a class=\"code-anchor\" href=\"api/core/InjectDecorator#new\">new (token: any): Inject</a>\n}\n</code-example>\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectDecorator#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Type of the Inject decorator / constructor function.</p>\n\n</section>\n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectDecorator#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"call\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">(token: any): any</code-example>\n  <p>For more details, see the <a href=\"guide/dependency-injection\">\"Dependency Injection Guide\"</a>.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectDecorator#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nclass Engine {}\n\n@Injectable()\nclass Car {\n  constructor(@Inject('MyEngine') public engine: Engine) {}\n}\n\nconst injector =\n    ReflectiveInjector.resolveAndCreate([{provide: 'MyEngine', useClass: Engine}, Car]);\n\nexpect(injector.get(Car).engine instanceof Engine).toBe(true);\n\n</code-example>\n<p>When <code>@Inject()</code> is not present, <a href=\"api/core/Injector\"><code><a href=\"api/core/Injector\">Injector</a></code></a> will use the type annotation of the\nparameter.</p>\n<h3 id=\"example-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/InjectDecorator#example-1\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nclass Engine {}\n\n@Injectable()\nclass Car {\n  constructor(public engine: Engine) {\n  }  // same as constructor(@Inject(Engine) engine:Engine)\n}\n\nconst injector = ReflectiveInjector.resolveAndCreate([Engine, Car]);\nexpect(injector.get(Car).engine instanceof Engine).toBe(true);\n\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"new\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">new (token: any): Inject</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>"
}