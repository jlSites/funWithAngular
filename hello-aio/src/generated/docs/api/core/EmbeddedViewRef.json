{
  "id": "api/core/EmbeddedViewRef",
  "title": "EmbeddedViewRef",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"embeddedviewref\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#embeddedviewref\"><i class=\"material-icons\">link</i></a>EmbeddedViewRef</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { EmbeddedViewRef } from <a href=\"api/core\">@angular/core</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/core/src/linker/view_ref.ts#L26-L85\">core/src/linker/view_ref.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass EmbeddedViewRef&#x3C;C> extends ViewRef {\n  <a class=\"code-anchor\" href=\"api/core/EmbeddedViewRef#context\">get context(): C</a>\n  <a class=\"code-anchor\" href=\"api/core/EmbeddedViewRef#rootNodes\">get rootNodes(): any[]</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Represents an Angular View.</p>\n<!-- TODO: move the next two paragraphs to the dev guide -->\n<p>A View is a fundamental building block of the application UI. It is the smallest grouping of\nElements which are created and destroyed together.</p>\n<p>Properties of elements in a View can change, but the structure (number and order) of elements in\na View cannot. Changing the structure of Elements can only be done by inserting, moving or\nremoving nested Views via a <a href=\"api/core/ViewContainerRef\"><code><a href=\"api/core/ViewContainerRef\">ViewContainerRef</a></code></a>. Each View can contain many View Containers.</p>\n<!-- /TODO -->\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<p>Given this template...</p>\n<code-example>\nCount: {{items.length}}\n&#x3C;ul>\n  &#x3C;li *ngFor=\"let  item of items\">{{item}}&#x3C;/li>\n&#x3C;/ul>\n</code-example>\n<p>We have two <a href=\"api/core/TemplateRef\"><code><a href=\"api/core/TemplateRef\">TemplateRef</a></code></a>s:</p>\n<p>Outer <a href=\"api/core/TemplateRef\"><code><a href=\"api/core/TemplateRef\">TemplateRef</a></code></a>:</p>\n<code-example>\nCount: {{items.length}}\n&#x3C;ul>\n  &#x3C;ng-template ngFor let-item [ngForOf]=\"items\">&#x3C;/ng-template>\n&#x3C;/ul>\n</code-example>\n<p>Inner <a href=\"api/core/TemplateRef\"><code><a href=\"api/core/TemplateRef\">TemplateRef</a></code></a>:</p>\n<code-example>\n  &#x3C;li>{{item}}&#x3C;/li>\n</code-example>\n<p>Notice that the original template is broken down into two separate <a href=\"api/core/TemplateRef\"><code><a href=\"api/core/TemplateRef\">TemplateRef</a></code></a>s.</p>\n<p>The outer/inner <a href=\"api/core/TemplateRef\"><code><a href=\"api/core/TemplateRef\">TemplateRef</a></code></a>s are then assembled into views like so:</p>\n<code-example>\n&#x3C;!-- ViewRef: outer-0 -->\nCount: 2\n&#x3C;ul>\n  &#x3C;ng-template view-container-ref>&#x3C;/ng-template>\n  &#x3C;!-- ViewRef: inner-1 -->&#x3C;li>first&#x3C;/li>&#x3C;!-- /ViewRef: inner-1 -->\n  &#x3C;!-- ViewRef: inner-2 -->&#x3C;li>second&#x3C;/li>&#x3C;!-- /ViewRef: inner-2 -->\n&#x3C;/ul>\n&#x3C;!-- /ViewRef: outer-0 -->\n</code-example>\n\n</section>\n\n\n\n\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"context\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get context(): C</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"rootNodes\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get rootNodes(): any[]</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>"
}