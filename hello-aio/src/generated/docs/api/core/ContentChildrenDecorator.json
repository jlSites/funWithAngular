{
  "id": "api/core/ContentChildrenDecorator",
  "title": "ContentChildrenDecorator",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"contentchildrendecorator\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildrenDecorator#contentchildrendecorator\"><i class=\"material-icons\">link</i></a>ContentChildrenDecorator</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/core\">@angular/core</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { ContentChildrenDecorator } from <a href=\"api/core\">@angular/core</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/core/src/metadata/di.ts#L146-L188\">core/src/metadata/di.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildrenDecorator#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface ContentChildrenDecorator { \n  <a class=\"code-anchor\" href=\"api/core/ContentChildrenDecorator#call\">(selector: Type&#x3C;any>|Function|string, opts?: {descendants?: boolean, read?: any}): any</a>\n  <a class=\"code-anchor\" href=\"api/core/ContentChildrenDecorator#new\">new (selector: Type&#x3C;any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query</a>\n}\n</code-example>\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildrenDecorator#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Type of the ContentChildren decorator / constructor function.</p>\n<p>See <a href=\"api/core/ContentChildren\"><code><a href=\"api/core/ContentChildren\">ContentChildren</a></code></a>.</p>\n\n</section>\n\n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildrenDecorator#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"call\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">(selector: Type&#x3C;any>|Function|string, opts?: {descendants?: boolean, read?: any}): any</code-example>\n  <p>You can use ContentChildren to get the <a href=\"api/core/QueryList\"><code><a href=\"api/core/QueryList\">QueryList</a></code></a> of elements or directives from the\ncontent DOM. Any time a child element is added, removed, or moved, the query list will be\nupdated,\nand the changes observable of the query list will emit a new value.</p>\n<p>Content queries are set before the <code>ngAfterContentInit</code> callback is called.</p>\n<p><strong>Metadata Properties</strong>:</p>\n<ul>\n<li><strong>selector</strong> - the directive type or the name used for querying.</li>\n<li><strong>descendants</strong> - include only direct children or all descendants.</li>\n<li><strong>read</strong> - read a different token from the queried elements.</li>\n</ul>\n<p>Let's look at an example:</p>\n<code-example>\nimport {Component, ContentChildren, Directive, Input, QueryList} from '@angular/core';\n\n@Directive({selector: 'pane'})\nexport class Pane {\n  @Input() id: string;\n}\n\n@Component({\n  selector: 'tab',\n  template: `\n    &#x3C;div class=\"top-level\">Top level panes: {{serializedPanes}}&#x3C;/div> \n    &#x3C;div class=\"nested\">Arbitrary nested panes: {{serializedNestedPanes}}&#x3C;/div>\n  `\n})\nexport class Tab {\n  @ContentChildren(Pane) topLevelPanes: QueryList&#x3C;Pane>;\n  @ContentChildren(Pane, {descendants: true}) arbitraryNestedPanes: QueryList&#x3C;Pane>;\n\n  get serializedPanes(): string {\n    return this.topLevelPanes ? this.topLevelPanes.map(p => p.id).join(', ') : '';\n  }\n  get serializedNestedPanes(): string {\n    return this.arbitraryNestedPanes ? this.arbitraryNestedPanes.map(p => p.id).join(', ') : '';\n  }\n}\n\n@Component({\n  selector: 'example-app',\n  template: `\n    &#x3C;tab>\n      &#x3C;pane id=\"1\">&#x3C;/pane>\n      &#x3C;pane id=\"2\">&#x3C;/pane>\n      &#x3C;pane id=\"3\" *ngIf=\"shouldShow\">\n        &#x3C;tab>\n          &#x3C;pane id=\"3_1\">&#x3C;/pane>\n          &#x3C;pane id=\"3_2\">&#x3C;/pane>\n        &#x3C;/tab>\n      &#x3C;/pane>\n    &#x3C;/tab>\n    \n    &#x3C;button (click)=\"show()\">Show 3&#x3C;/button>\n  `,\n})\nexport class ContentChildrenComp {\n  shouldShow = false;\n\n  show() { this.shouldShow = true; }\n}\n\n</code-example>\n<p><strong>npm package</strong>: <code>@angular/core</code></p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"new\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">new (selector: Type&#x3C;any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>"
}