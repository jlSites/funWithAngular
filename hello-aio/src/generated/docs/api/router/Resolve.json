{
  "id": "api/router/Resolve",
  "title": "Resolve",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"resolve\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#resolve\"><i class=\"material-icons\">link</i></a>Resolve</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/router\">@angular/router</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { Resolve } from <a href=\"api/router\">@angular/router</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/router/src/interfaces.ts#L241-L311\">router/src/interfaces.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Interface that class can implement to be a data provider.</p>\n\n</div>\n\n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface Resolve&#x3C;T> { \n  <a class=\"code-anchor\" href=\"api/router/Resolve#resolve\">resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable&#x3C;T>|Promise&#x3C;T>|T</a>\n}\n</code-example>\n</section>\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <code-example>\nclass Backend {\n  fetchTeam(id: string) {\n    return 'someTeam';\n  }\n}\n\n@Injectable()\nclass TeamResolver implements Resolve&#x3C;Team> {\n  constructor(private backend: Backend) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable&#x3C;any>|Promise&#x3C;any>|any {\n    return this.backend.fetchTeam(route.params.id);\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      {\n        path: 'team/:id',\n        component: TeamCmp,\n        resolve: {\n          team: TeamResolver\n        }\n      }\n    ])\n  ],\n  providers: [TeamResolver]\n})\nclass AppModule {}\n</code-example>\n<p>You can alternatively provide a function with the <code>resolve</code> signature:</p>\n<code-example>\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      {\n        path: 'team/:id',\n        component: TeamCmp,\n        resolve: {\n          team: 'teamResolver'\n        }\n      }\n    ])\n  ],\n  providers: [\n    {\n      provide: 'teamResolver',\n      useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => 'team'\n    }\n  ]\n})\nclass AppModule {}\n</code-example>\n\n</section>\n\n\n  \n  \n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"resolve\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable&#x3C;T>|Promise&#x3C;T>|T</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>"
}