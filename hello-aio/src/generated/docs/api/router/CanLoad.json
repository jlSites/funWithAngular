{
  "id": "api/router/CanLoad",
  "title": "CanLoad",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"canload\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/CanLoad#canload\"><i class=\"material-icons\">link</i></a>CanLoad</h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/router\">@angular/router</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { CanLoad } from <a href=\"api/router\">@angular/router</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/router/src/interfaces.ts#L312-L379\">router/src/interfaces.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Interface that a class can implement to be a guard deciding if a children can be\nloaded.</p>\n\n</div>\n\n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/CanLoad#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface CanLoad { \n  <a class=\"code-anchor\" href=\"api/router/CanLoad#canLoad\">canLoad(route: Route): Observable&#x3C;boolean>|Promise&#x3C;boolean>|boolean</a>\n}\n</code-example>\n</section>\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/CanLoad#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <code-example>\nclass UserToken {}\nclass Permissions {\n  canLoadChildren(user: UserToken, id: string): boolean {\n    return true;\n  }\n}\n\n@Injectable()\nclass CanLoadTeamSection implements CanLoad {\n  constructor(private permissions: Permissions, private currentUser: UserToken) {}\n\n  canLoad(route: Route): Observable&#x3C;boolean>|Promise&#x3C;boolean>|boolean {\n    return this.permissions.canLoadChildren(this.currentUser, route);\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      {\n        path: 'team/:id',\n        component: TeamCmp,\n        loadChildren: 'team.js',\n        canLoad: [CanLoadTeamSection]\n      }\n    ])\n  ],\n  providers: [CanLoadTeamSection, UserToken, Permissions]\n})\nclass AppModule {}\n</code-example>\n<p>You can alternatively provide a function with the <code>canLoad</code> signature:</p>\n<code-example>\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      {\n        path: 'team/:id',\n        component: TeamCmp,\n        loadChildren: 'team.js',\n        canLoad: ['canLoadTeamSection']\n      }\n    ])\n  ],\n  providers: [\n    {\n      provide: 'canLoadTeamSection',\n      useValue: (route: Route) => true\n    }\n  ]\n})\nclass AppModule {}\n</code-example>\n\n</section>\n\n\n  \n  \n  \n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/CanLoad#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"canLoad\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">canLoad(route: Route): Observable&#x3C;boolean>|Promise&#x3C;boolean>|boolean</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n\n</section></article>"
}