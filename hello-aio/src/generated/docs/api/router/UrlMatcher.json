{
  "id": "api/router/UrlMatcher",
  "title": "UrlMatcher",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"urlmatcher\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/UrlMatcher#urlmatcher\"><i class=\"material-icons\">link</i></a>UrlMatcher</h1>\n    <label class=\"api-type-label type-alias\">type-alias</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/router\">@angular/router</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { UrlMatcher } from <a href=\"api/router\">@angular/router</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/router/src/config.ts#L268-L290\">router/src/config.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>A function matching URLs</p>\n\n</div>\n\n  \n  \n  \n  <code-example language=\"ts\" hidecopy=\"true\">\n  type UrlMatcher = (segments: UrlSegment[], group: UrlSegmentGroup, route: Route) =>\n    UrlMatchResult;\n  </code-example>\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/UrlMatcher#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>A custom URL matcher can be provided when a combination of <code>path</code> and <code>pathMatch</code> isn't\nexpressive enough.</p>\n<p>For instance, the following matcher matches html files.</p>\n<code-example>\nfunction htmlFiles(url: UrlSegment[]) {\n return url.length === 1 &#x26;&#x26; url[0].path.endsWith('.html') ? ({consumed: url}) : null;\n}\n\nconst routes = [{ matcher: htmlFiles, component: HtmlCmp }];\n</code-example>\n\n</section>\n\n\n\n\n</section></article>"
}