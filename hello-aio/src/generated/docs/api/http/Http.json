{
  "id": "api/http/Http",
  "title": "Http",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"http\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#http\"><i class=\"material-icons\">link</i></a>Http</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/http\">@angular/http</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { Http } from <a href=\"api/http\">@angular/http</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/http/src/http.ts#L42-L185\">http/src/http.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass Http {\n  <a class=\"code-anchor\" href=\"api/http/Http#_backend\">protected _backend: ConnectionBackend</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#_defaultOptions\">protected _defaultOptions: RequestOptions</a>\n  <a class=\"code-anchor\" href=\"api/http/Http#request\">request(url: string|Request, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#get\">get(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#post\">post(url: string, body: any, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#put\">put(url: string, body: any, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#delete\">delete(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#patch\">patch(url: string, body: any, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#head\">head(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n  <a class=\"code-anchor\" href=\"api/http/Http#options\">options(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Performs http requests using <code>XMLHttpRequest</code> as the default backend.</p>\n<p><code><a href=\"api/http/Http\">Http</a></code> is available as an injectable class, with methods to perform http requests. Calling\n<code>request</code> returns an <code>Observable</code> which will emit a single <a href=\"api/http/Response\"><code><a href=\"api/http/Response\">Response</a></code></a> when a\nresponse is received.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example language=\"typescript\">\nimport {Http, HTTP_PROVIDERS} from '@angular/http';\nimport 'rxjs/add/operator/map'\n@Component({\n  selector: 'http-app',\n  viewProviders: [HTTP_PROVIDERS],\n  templateUrl: 'people.html'\n})\nclass PeopleComponent {\n  constructor(http: Http) {\n    http.get('people.json')\n      // Call map on the response observable to get the parsed people object\n      .map(res => res.json())\n      // Subscribe to the observable to get the parsed people object and attach it to the\n      // component\n      .subscribe(people => this.people = people);\n  }\n}\n</code-example>\n<h3 id=\"example-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#example-1\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nhttp.get('people.json').subscribe((res:Response) => this.people = res.json());\n</code-example>\n<p>The default construct used to perform requests, <code>XMLHttpRequest</code>, is abstracted as a \"Backend\" (\n<a href=\"api/http/XHRBackend\"><code><a href=\"api/http/XHRBackend\">XHRBackend</a></code></a> in this case), which could be mocked with dependency injection by replacing\nthe <a href=\"api/http/XHRBackend\"><code><a href=\"api/http/XHRBackend\">XHRBackend</a></code></a> provider, as in the following example:</p>\n<h3 id=\"example-2\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#example-2\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example language=\"typescript\">\nimport {BaseRequestOptions, Http} from '@angular/http';\nimport {MockBackend} from '@angular/http/testing';\nvar injector = Injector.resolveAndCreate([\n  BaseRequestOptions,\n  MockBackend,\n  {provide: Http, useFactory:\n      function(backend, defaultOptions) {\n        return new Http(backend, defaultOptions);\n      },\n      deps: [MockBackend, BaseRequestOptions]}\n]);\nvar http = injector.get(Http);\nhttp.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n</code-example>\n\n</section>\n\n\n\n\n\n<section class=\"constructor\">\n  <a id=\"constructor\"></a>\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">constructor(_backend: ConnectionBackend, _defaultOptions: RequestOptions)</code-example>\n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"_backend\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">protected _backend: ConnectionBackend</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"_defaultOptions\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">protected _defaultOptions: RequestOptions</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"request\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">request(url: string|Request, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs any type of http request. First argument is required, and can either be a url or\na <a href=\"api/http/Request\"><code><a href=\"api/http/Request\">Request</a></code></a> instance. If the first argument is a url, an optional <a href=\"api/http/RequestOptions\"><code><a href=\"api/http/RequestOptions\">RequestOptions</a></code></a>\nobject can be provided as the 2nd argument. The options object will be merged with the values\nof <a href=\"api/http/BaseRequestOptions\"><code><a href=\"api/http/BaseRequestOptions\">BaseRequestOptions</a></code></a> before performing the request.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>get</code> http method.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"post\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">post(url: string, body: any, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>post</code> http method.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"put\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">put(url: string, body: any, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>put</code> http method.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"delete\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">delete(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>delete</code> http method.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patch\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">patch(url: string, body: any, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>patch</code> http method.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"head\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">head(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>head</code> http method.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"options\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">options(url: string, options?: RequestOptionsArgs): Observable&#x3C;Response></code-example>\n  <p>Performs a request with <code>options</code> http method.</p>\n\n  </div>\n\n    \n    \n  \n</section>\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/http/Http#annotations\"><i class=\"material-icons\">link</i></a>Annotations</h2>\n    <code-example hidecopy=\"true\" class=\"no-box api-heading\">@Injectable()</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>"
}