{
  "id": "api/forms/AbstractControl",
  "title": "AbstractControl",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"abstractcontrol\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#abstractcontrol\"><i class=\"material-icons\">link</i></a>AbstractControl</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { AbstractControl } from <a href=\"api/forms\">@angular/forms</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/forms/src/model.ts#L67-L586\">forms/src/model.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>This is the base class for <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a>, <a href=\"api/forms/FormGroup\"><code><a href=\"api/forms/FormGroup\">FormGroup</a></code></a>, and\n<a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a>.</p>\n<p>It provides some of the shared behavior that all controls and groups of controls have, like\nrunning validators, calculating status, and resetting state. It also defines the properties\nthat are shared between all sub-classes, like <code>value</code>, <code>valid</code>, and <code>dirty</code>. It shouldn't be\ninstantiated directly.</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass AbstractControl {\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\">validator: ValidatorFn|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\">asyncValidator: AsyncValidatorFn|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\">get value(): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\">get parent(): FormGroup|FormArray</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\">get status(): string</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\">get valid(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\">get invalid(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\">get pending(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\">get disabled(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\">get enabled(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\">get errors(): ValidationErrors|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\">get pristine(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\">get dirty(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\">get touched(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\">get untouched(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\">get valueChanges(): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\">get statusChanges(): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\">setValidators(newValidator: ValidatorFn|ValidatorFn[]|null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\">setAsyncValidators(newValidator: AsyncValidatorFn|AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\">clearValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\">clearAsyncValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\">markAsTouched(opts: {onlySelf?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\">markAsUntouched(opts: {onlySelf?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\">markAsDirty(opts: {onlySelf?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\">markAsPristine(opts: {onlySelf?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\">markAsPending(opts: {onlySelf?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\">disable(opts: {onlySelf?: boolean, emitEvent?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\">enable(opts: {onlySelf?: boolean, emitEvent?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\">setParent(parent: FormGroup|FormArray): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">setValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">patchValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">reset(value?: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity(opts: {onlySelf?: boolean, emitEvent?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\">setErrors(errors: ValidationErrors|null, opts: {emitEvent?: boolean}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\">get(path: Array&#x3C;string|number>|string): AbstractControl|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\">getError(errorCode: string, path?: string[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\">hasError(errorCode: string, path?: string[]): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\">get root(): AbstractControl</a>\n}\n</code-example>\n</section>\n\n  \n\n  \n\n\n\n\n\n\n<section class=\"constructor\">\n  <a id=\"constructor\"></a>\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">constructor(validator: ValidatorFn|null, asyncValidator: AsyncValidatorFn|null)</code-example>\n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"validator\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">validator: ValidatorFn|null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"asyncValidator\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">asyncValidator: AsyncValidatorFn|null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"value\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get value(): any</code-example>\n  <p>The value of the control.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"parent\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get parent(): FormGroup|FormArray</code-example>\n  <p>The parent control.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"status\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get status(): string</code-example>\n  <p>The validation status of the control. There are four possible\nvalidation statuses:</p>\n<ul>\n<li><strong>VALID</strong>:  control has passed all validation checks</li>\n<li><strong>INVALID</strong>: control has failed at least one validation check</li>\n<li><strong>PENDING</strong>: control is in the midst of conducting a validation check</li>\n<li><strong>DISABLED</strong>: control is exempt from validation checks</li>\n</ul>\n<p>These statuses are mutually exclusive, so a control cannot be\nboth valid AND invalid or invalid AND disabled.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"valid\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get valid(): boolean</code-example>\n  <p>A control is <code>valid</code> when its <code>status === VALID</code>.</p>\n<p>In order to have this status, the control must have passed all its\nvalidation checks.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"invalid\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get invalid(): boolean</code-example>\n  <p>A control is <code>invalid</code> when its <code>status === INVALID</code>.</p>\n<p>In order to have this status, the control must have failed\nat least one of its validation checks.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"pending\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get pending(): boolean</code-example>\n  <p>A control is <code>pending</code> when its <code>status === PENDING</code>.</p>\n<p>In order to have this status, the control must be in the\nmiddle of conducting a validation check.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"disabled\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get disabled(): boolean</code-example>\n  <p>A control is <code>disabled</code> when its <code>status === DISABLED</code>.</p>\n<p>Disabled controls are exempt from validation checks and\nare not included in the aggregate value of their ancestor\ncontrols.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"enabled\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get enabled(): boolean</code-example>\n  <p>A control is <code>enabled</code> as long as its <code>status !== DISABLED</code>.</p>\n<p>In other words, it has a status of <code>VALID</code>, <code>INVALID</code>, or\n<code>PENDING</code>.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"errors\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get errors(): ValidationErrors|null</code-example>\n  <p>Returns any errors generated by failing validation. If there\nare no errors, it will return null.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"pristine\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get pristine(): boolean</code-example>\n  <p>A control is <code>pristine</code> if the user has not yet changed\nthe value in the UI.</p>\n<p>Note that programmatic changes to a control's value will\n<em>not</em> mark it dirty.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"dirty\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get dirty(): boolean</code-example>\n  <p>A control is <code>dirty</code> if the user has changed the value\nin the UI.</p>\n<p>Note that programmatic changes to a control's value will\n<em>not</em> mark it dirty.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"touched\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get touched(): boolean</code-example>\n  <p>A control is marked <code>touched</code> once the user has triggered\na <code>blur</code> event on it.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"untouched\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get untouched(): boolean</code-example>\n  <p>A control is <code>untouched</code> if the user has not yet triggered\na <code>blur</code> event on it.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"valueChanges\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get valueChanges(): Observable&#x3C;any></code-example>\n  <p>Emits an event every time the value of the control changes, in\nthe UI or programmatically.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"statusChanges\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get statusChanges(): Observable&#x3C;any></code-example>\n  <p>Emits an event every time the validation status of the control\nis re-calculated.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setValidators\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setValidators(newValidator: ValidatorFn|ValidatorFn[]|null): void</code-example>\n  <p>Sets the synchronous validators that are active on this control.  Calling\nthis will overwrite any existing sync validators.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setAsyncValidators\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setAsyncValidators(newValidator: AsyncValidatorFn|AsyncValidatorFn[]): void</code-example>\n  <p>Sets the async validators that are active on this control. Calling this\nwill overwrite any existing async validators.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"clearValidators\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">clearValidators(): void</code-example>\n  <p>Empties out the sync validator list.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"clearAsyncValidators\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">clearAsyncValidators(): void</code-example>\n  <p>Empties out the async validator list.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsTouched\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">markAsTouched(opts: {onlySelf?: boolean}): void</code-example>\n  <p>Marks the control as <code>touched</code>.</p>\n<p>This will also mark all direct ancestors as <code>touched</code> to maintain\nthe model.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsUntouched\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">markAsUntouched(opts: {onlySelf?: boolean}): void</code-example>\n  <p>Marks the control as <code>untouched</code>.</p>\n<p>If the control has any children, it will also mark all children as <code>untouched</code>\nto maintain the model, and re-calculate the <code>touched</code> status of all parent\ncontrols.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsDirty\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">markAsDirty(opts: {onlySelf?: boolean}): void</code-example>\n  <p>Marks the control as <code>dirty</code>.</p>\n<p>This will also mark all direct ancestors as <code>dirty</code> to maintain\nthe model.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsPristine\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">markAsPristine(opts: {onlySelf?: boolean}): void</code-example>\n  <p>Marks the control as <code>pristine</code>.</p>\n<p>If the control has any children, it will also mark all children as <code>pristine</code>\nto maintain the model, and re-calculate the <code>pristine</code> status of all parent\ncontrols.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"markAsPending\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">markAsPending(opts: {onlySelf?: boolean}): void</code-example>\n  <p>Marks the control as <code>pending</code>.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"disable\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">disable(opts: {onlySelf?: boolean, emitEvent?: boolean}): void</code-example>\n  <p>Disables the control. This means the control will be exempt from validation checks and\nexcluded from the aggregate value of any parent. Its status is <code>DISABLED</code>.</p>\n<p>If the control has children, all children will be disabled to maintain the model.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"enable\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">enable(opts: {onlySelf?: boolean, emitEvent?: boolean}): void</code-example>\n  <p>Enables the control. This means the control will be included in validation checks and\nthe aggregate value of its parent. Its status is re-calculated based on its value and\nits validators.</p>\n<p>If the control has children, all children will be enabled.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setParent\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setParent(parent: FormGroup|FormArray): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setValue\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setValue(value: any, options?: Object): void</code-example>\n  <p>Sets the value of the control. Abstract method (implemented in sub-classes).</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patchValue\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">patchValue(value: any, options?: Object): void</code-example>\n  <p>Patches the value of the control. Abstract method (implemented in sub-classes).</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reset\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">reset(value?: any, options?: Object): void</code-example>\n  <p>Resets the control. Abstract method (implemented in sub-classes).</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"updateValueAndValidity\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">updateValueAndValidity(opts: {onlySelf?: boolean, emitEvent?: boolean}): void</code-example>\n  <p>Re-calculates the value and validation status of the control.</p>\n<p>By default, it will also update the value and validity of its ancestors.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setErrors\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setErrors(errors: ValidationErrors|null, opts: {emitEvent?: boolean}): void</code-example>\n  <p>Sets errors on a form control.</p>\n<p>This is used when validations are run manually by the user, rather than automatically.</p>\n<p>Calling <code>setErrors</code> will also update the validity of the parent control.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst login = new FormControl(\"someLogin\");\nlogin.setErrors({\n  \"notUnique\": true\n});\n\nexpect(login.valid).toEqual(false);\nexpect(login.errors).toEqual({\"notUnique\": true});\n\nlogin.setValue(\"someOtherLogin\");\n\nexpect(login.valid).toEqual(true);\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"get\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get(path: Array&#x3C;string|number>|string): AbstractControl|null</code-example>\n  <p>Retrieves a child control given the control's name or path.</p>\n<p>Paths can be passed in as an array or a string delimited by a dot.</p>\n<p>To get a control nested within a <code>person</code> sub-group:</p>\n<ul>\n<li><code>this.form.get('person.name');</code></li>\n</ul>\n<p>-OR-</p>\n<ul>\n<li><code>this.form.get(['person', 'name']);</code></li>\n</ul>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"getError\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">getError(errorCode: string, path?: string[]): any</code-example>\n  <p>Returns true if the control with the given path has the error specified. Otherwise\nreturns null or undefined.</p>\n<p>If no path is given, it checks for the error on the present control.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"hasError\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">hasError(errorCode: string, path?: string[]): boolean</code-example>\n  <p>Returns true if the control with the given path has the error specified. Otherwise\nreturns false.</p>\n<p>If no path is given, it checks for the error on the present control.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"root\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get root(): AbstractControl</code-example>\n  <p>Retrieves the top-level ancestor of this control.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>"
}