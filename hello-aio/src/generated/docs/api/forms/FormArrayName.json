{
  "id": "api/forms/FormArrayName",
  "title": "FormArrayName",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"formarrayname\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#formarrayname\"><i class=\"material-icons\">link</i></a>FormArrayName</h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { FormArrayName } from <a href=\"api/forms\">@angular/forms</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/forms/src/directives/reactive_directives/form_group_name.ts#L96-L197\">forms/src/directives/reactive_directives/form_group_name.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Syncs a nested <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> to a DOM element.</p>\n\n</div>\n\n  \n  \n  <section class=\"directive-overview\">\n  <h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\n<a href=\"api/forms/FormArrayName#annotations\">@Directive({selector: '[formArrayName]', providers: [formArrayNameProvider]})</a>\nclass FormArrayName extends ControlContainer implements OnInit, OnDestroy {\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#name\">name: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#ngOnInit\">ngOnInit(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#ngOnDestroy\">ngOnDestroy(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#control\">get control(): FormArray</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#formDirective\">get formDirective(): FormGroupDirective|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#path\">get path(): string[]</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#validator\">get validator(): ValidatorFn|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArrayName#asyncValidator\">get asyncValidator(): AsyncValidatorFn|null</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <p>This directive is designed to be used with a parent <a href=\"api/forms/FormGroupDirective\"><code><a href=\"api/forms/FormGroupDirective\">FormGroupDirective</a></code></a> (selector:\n<code>[formGroup]</code>).</p>\n<p>It accepts the string name of the nested <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> you want to link, and\nwill look for a <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> registered with that name in the parent\n<a href=\"api/forms/FormGroup\"><code><a href=\"api/forms/FormGroup\">FormGroup</a></code></a> instance you passed into <a href=\"api/forms/FormGroupDirective\"><code><a href=\"api/forms/FormGroupDirective\">FormGroupDirective</a></code></a>.</p>\n<p>Nested form arrays can come in handy when you have a group of form controls but\nyou're not sure how many there will be. Form arrays allow you to create new\nform controls dynamically.</p>\n<p><strong>Access the array</strong>: You can access the associated <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> using the\n<a href=\"api/forms/AbstractControl#get\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> method on the parent <a href=\"api/forms/FormGroup\"><code><a href=\"api/forms/FormGroup\">FormGroup</a></code></a>.\nEx: <code>this.form.get('cities')</code>.</p>\n<p><strong>Get the value</strong>: the <code>value</code> property is always synced and available on the\n<a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a>. See a full list of available properties in <a href=\"api/forms/AbstractControl\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a>.</p>\n<p><strong>Set the value</strong>: You can set an initial value for each child control when instantiating\nthe <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a>, or you can set the value programmatically later using the\n<a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a>'s <a href=\"api/forms/AbstractControl#setValue\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> or <a href=\"api/forms/AbstractControl#patchValue\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a>\nmethods.</p>\n<p><strong>Listen to value</strong>: If you want to listen to changes in the value of the array, you can\nsubscribe to the <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a>'s <a href=\"api/forms/AbstractControl#valueChanges\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> event.  You can also\nlisten to its <a href=\"api/forms/AbstractControl#statusChanges\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> event to be notified when the validation\nstatus is re-calculated.</p>\n<p><strong>Add new controls</strong>: You can add new controls to the <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> dynamically by\ncalling its <a href=\"api/forms/FormArray#push\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> method.\nEx: <code>this.form.get('cities').push(new FormControl());</code></p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nimport {Component} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'example-app',\n  template: `\n    &#x3C;form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      &#x3C;div formArrayName=\"cities\">\n        &#x3C;div *ngFor=\"let city of cities.controls; index as i\">\n          &#x3C;input [formControlName]=\"i\" placeholder=\"City\">\n        &#x3C;/div>\n      &#x3C;/div>\n      &#x3C;button>Submit&#x3C;/button>\n    &#x3C;/form>\n    \n    &#x3C;button (click)=\"addCity()\">Add City&#x3C;/button>\n    &#x3C;button (click)=\"setPreset()\">Set preset&#x3C;/button>\n  `,\n})\nexport class NestedFormArray {\n  form = new FormGroup({\n    cities: new FormArray([\n      new FormControl('SF'),\n      new FormControl('NY'),\n    ]),\n  });\n\n  get cities(): FormArray { return this.form.get('cities') as FormArray; }\n\n  addCity() { this.cities.push(new FormControl()); }\n\n  onSubmit() {\n    console.log(this.cities.value);  // ['SF', 'NY']\n    console.log(this.form.value);    // { cities: ['SF', 'NY'] }\n  }\n\n  setPreset() { this.cities.patchValue(['LA', 'MTV']); }\n}\n\n</code-example>\n<ul>\n<li>\n<p><strong>npm package</strong>: <code>@angular/forms</code></p>\n</li>\n<li>\n<p><strong>NgModule</strong>: <code><a href=\"api/forms/ReactiveFormsModule\">ReactiveFormsModule</a></code></p>\n</li>\n</ul>\n\n</section>\n\n\n  \n\n<section class=\"selectors\">\n  <h2 id=\"selectors\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#selectors\"><i class=\"material-icons\">link</i></a>Selectors</h2>\n  \n  <div class=\"selector\">\n    <code>[formArrayName]</code>\n  </div>\n  \n</section>\n\n\n  \n<section class=\"inputs\">\n  <h2 id=\"inputs\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#inputs\"><i class=\"material-icons\">link</i></a>Inputs</h2>\n  \n  <div class=\"input\">\n    <code>formArrayName</code> bound to <code>FormArrayName.name</code>\n    \n  </div>\n  \n</section>\n\n  \n  \n\n\n\n\n\n\n\n<section class=\"constructor\">\n  <a id=\"constructor\"></a>\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">constructor(parent: ControlContainer, validators: any[], asyncValidators: any[])</code-example>\n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"name\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">name: string</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"ngOnInit\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">ngOnInit(): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"ngOnDestroy\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">ngOnDestroy(): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"control\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get control(): FormArray</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"formDirective\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get formDirective(): FormGroupDirective|null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"path\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get path(): string[]</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"validator\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get validator(): ValidatorFn|null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"asyncValidator\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get asyncValidator(): AsyncValidatorFn|null</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArrayName#annotations\"><i class=\"material-icons\">link</i></a>Annotations</h2>\n    <code-example hidecopy=\"true\" class=\"no-box api-heading\">@Directive({selector: '[formArrayName]', providers: [formArrayNameProvider]})</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>"
}