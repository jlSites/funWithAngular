{
  "id": "api/forms/SelectControlValueAccessor",
  "title": "SelectControlValueAccessor",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"selectcontrolvalueaccessor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#selectcontrolvalueaccessor\"><i class=\"material-icons\">link</i></a>SelectControlValueAccessor</h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { SelectControlValueAccessor } from <a href=\"api/forms\">@angular/forms</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/forms/src/directives/select_control_value_accessor.ts#L27-L157\">forms/src/directives/select_control_value_accessor.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Writes values and listens to changes on a select element.</p>\n<p>Used by <a href=\"api/forms/NgModel\"><code><a href=\"api/forms/NgModel\">NgModel</a></code></a>, <a href=\"api/forms/FormControlDirective\"><code><a href=\"api/forms/FormControlDirective\">FormControlDirective</a></code></a>, and <a href=\"api/forms/FormControlName\"><code><a href=\"api/forms/FormControlName\">FormControlName</a></code></a>\nto keep the view synced with the <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a> model.</p>\n\n</div>\n\n  \n  \n  <section class=\"directive-overview\">\n  <h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\n<a href=\"api/forms/SelectControlValueAccessor#annotations\">@Directive({\n  selector:\n      'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n})</a>\nclass SelectControlValueAccessor implements ControlValueAccessor {\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#value\">value: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#onChange\">onChange: (_: any) => {}</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#onTouched\">onTouched: () => {}</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#compareWith\">set compareWith(fn: (o1: any, o2: any) => boolean)</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#writeValue\">writeValue(value: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#registerOnChange\">registerOnChange(fn: (value: any) => any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#registerOnTouched\">registerOnTouched(fn: () => any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/SelectControlValueAccessor#setDisabledState\">setDisabledState(isDisabled: boolean): void</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <p>If you have imported the <a href=\"api/forms/FormsModule\"><code><a href=\"api/forms/FormsModule\">FormsModule</a></code></a> or the <a href=\"api/forms/ReactiveFormsModule\"><code><a href=\"api/forms/ReactiveFormsModule\">ReactiveFormsModule</a></code></a>, this\nvalue accessor will be active on any select control that has a form directive. You do\n<strong>not</strong> need to add a special selector to activate it.</p>\n<h3 id=\"how-to-use-select-controls-with-form-directives\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#how-to-use-select-controls-with-form-directives\"><i class=\"material-icons\">link</i></a>How to use select controls with form directives</h3>\n<p>To use a select in a template-driven form, simply add an <code>ngModel</code> and a <code>name</code>\nattribute to the main <code>&#x3C;select></code> tag.</p>\n<p>If your option values are simple strings, you can bind to the normal <code>value</code> property\non the option.  If your option values happen to be objects (and you'd like to save the\nselection in your form as an object), use <code>ngValue</code> instead:</p>\n<code-example>\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'example-app',\n  template: `\n    &#x3C;form #f=\"ngForm\">\n      &#x3C;select name=\"state\" ngModel>\n        &#x3C;option value=\"\" disabled>Choose a state&#x3C;/option>\n        &#x3C;option *ngFor=\"let state of states\" [ngValue]=\"state\">\n          {{ state.abbrev }}\n        &#x3C;/option>\n      &#x3C;/select>\n    &#x3C;/form>\n    \n     &#x3C;p>Form value: {{ f.value | json }}&#x3C;/p>\n     &#x3C;!-- example value: {state: {name: 'New York', abbrev: 'NY'} } -->\n  `,\n})\nexport class SelectControlComp {\n  states = [\n    {name: 'Arizona', abbrev: 'AZ'},\n    {name: 'California', abbrev: 'CA'},\n    {name: 'Colorado', abbrev: 'CO'},\n    {name: 'New York', abbrev: 'NY'},\n    {name: 'Pennsylvania', abbrev: 'PA'},\n  ];\n}\n\n</code-example>\n<p>In reactive forms, you'll also want to add your form directive (<code>formControlName</code> or\n<code>formControl</code>) on the main <code>&#x3C;select></code> tag. Like in the former example, you have the\nchoice of binding to the  <code>value</code> or <code>ngValue</code> property on the select's options.</p>\n<code-example>\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'example-app',\n  template: `\n    &#x3C;form [formGroup]=\"form\">\n      &#x3C;select formControlName=\"state\">\n        &#x3C;option *ngFor=\"let state of states\" [ngValue]=\"state\">\n          {{ state.abbrev }}\n        &#x3C;/option>\n      &#x3C;/select>\n    &#x3C;/form>\n    \n     &#x3C;p>Form value: {{ form.value | json }}&#x3C;/p> \n     &#x3C;!-- {state: {name: 'New York', abbrev: 'NY'} } -->\n  `,\n})\nexport class ReactiveSelectComp {\n  states = [\n    {name: 'Arizona', abbrev: 'AZ'},\n    {name: 'California', abbrev: 'CA'},\n    {name: 'Colorado', abbrev: 'CO'},\n    {name: 'New York', abbrev: 'NY'},\n    {name: 'Pennsylvania', abbrev: 'PA'},\n  ];\n\n  form = new FormGroup({\n    state: new FormControl(this.states[3]),\n  });\n}\n\n</code-example>\n<h3 id=\"caveat-option-selection\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#caveat-option-selection\"><i class=\"material-icons\">link</i></a>Caveat: Option selection</h3>\n<p>Angular uses object identity to select option. It's possible for the identities of items\nto change while the data does not. This can happen, for example, if the items are produced\nfrom an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\nsecond response will produce objects with different identities.</p>\n<p>To customize the default option comparison algorithm, <code>&#x3C;select></code> supports <code>compareWith</code> input.\n<code>compareWith</code> takes a <strong>function</strong> which has two arguments: <code>option1</code> and <code>option2</code>.\nIf <code>compareWith</code> is given, Angular selects option by the return value of the function.</p>\n<h4 id=\"syntax\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#syntax\"><i class=\"material-icons\">link</i></a>Syntax</h4>\n<code-example>\n&#x3C;select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n    &#x3C;option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n        {{country.name}}\n    &#x3C;/option>\n&#x3C;/select>\n\ncompareFn(c1: Country, c2: Country): boolean {\n    return c1 &#x26;&#x26; c2 ? c1.id === c2.id : c1 === c2;\n}\n</code-example>\n<p>Note: We listen to the 'change' event because 'input' events aren't fired\nfor selects in Firefox and IE:\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\">https://bugzilla.mozilla.org/show_bug.cgi?id=1024350</a>\n<a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\">https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/</a></p>\n<ul>\n<li><strong>npm package</strong>: <code>@angular/forms</code></li>\n</ul>\n\n</section>\n\n\n  \n\n<section class=\"selectors\">\n  <h2 id=\"selectors\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#selectors\"><i class=\"material-icons\">link</i></a>Selectors</h2>\n  \n  <div class=\"selector\">\n    <code>select:not([multiple])[formControlName]</code>\n  </div>\n  \n  <div class=\"selector\">\n    <code>select:not([multiple])[formControl]</code>\n  </div>\n  \n  <div class=\"selector\">\n    <code>select:not([multiple])[ngModel]</code>\n  </div>\n  \n</section>\n\n\n  \n<section class=\"inputs\">\n  <h2 id=\"inputs\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#inputs\"><i class=\"material-icons\">link</i></a>Inputs</h2>\n  \n  <div class=\"input\">\n    <code>compareWith</code> bound to <code>SelectControlValueAccessor.compareWith</code>\n    \n  </div>\n  \n</section>\n\n  \n  \n\n\n\n\n\n\n\n<section class=\"constructor\">\n  <a id=\"constructor\"></a>\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">constructor(_renderer: Renderer2, _elementRef: ElementRef)</code-example>\n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"value\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">value: any</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"onChange\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">onChange: (_: any) => {}</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"onTouched\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">onTouched: () => {}</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"compareWith\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">set compareWith(fn: (o1: any, o2: any) => boolean)</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"writeValue\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">writeValue(value: any): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnChange\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">registerOnChange(fn: (value: any) => any): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerOnTouched\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">registerOnTouched(fn: () => any): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setDisabledState\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setDisabledState(isDisabled: boolean): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n</section>\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/SelectControlValueAccessor#annotations\"><i class=\"material-icons\">link</i></a>Annotations</h2>\n    <code-example hidecopy=\"true\" class=\"no-box api-heading\">@Directive({\n  selector:\n      'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n})</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>"
}