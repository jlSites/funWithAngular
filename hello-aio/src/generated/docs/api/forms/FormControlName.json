{
  "id": "api/forms/FormControlName",
  "title": "FormControlName",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"formcontrolname\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#formcontrolname\"><i class=\"material-icons\">link</i></a>FormControlName</h1>\n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { FormControlName } from <a href=\"api/forms\">@angular/forms</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/forms/src/directives/reactive_directives/form_control_name.ts#L28-L159\">forms/src/directives/reactive_directives/form_control_name.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Syncs a <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a> in an existing <a href=\"api/forms/FormGroup\"><code><a href=\"api/forms/FormGroup\">FormGroup</a></code></a> to a form control\nelement by name.</p>\n<p>In other words, this directive ensures that any values written to the <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a>\ninstance programmatically will be written to the DOM element (model -> view). Conversely,\nany values written to the DOM element through user input will be reflected in the\n<a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a> instance (view -> model).</p>\n\n</div>\n\n  \n  \n  <section class=\"directive-overview\">\n  <h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\n<a href=\"api/forms/FormControlName#annotations\">@Directive({selector: '[formControlName]', providers: [controlNameBinding]})</a>\nclass FormControlName extends NgControl implements OnChanges, OnDestroy {\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#name\">name: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#model\">model: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#update\">update: new EventEmitter()</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#isDisabled\">set isDisabled(isDisabled: boolean)</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#ngOnChanges\">ngOnChanges(changes: SimpleChanges)</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#ngOnDestroy\">ngOnDestroy(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#viewToModelUpdate\">viewToModelUpdate(newValue: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#path\">get path(): string[]</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#formDirective\">get formDirective(): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#validator\">get validator(): ValidatorFn|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#asyncValidator\">get asyncValidator(): AsyncValidatorFn</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormControlName#control\">get control(): FormControl</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <p>This directive is designed to be used with a parent <a href=\"api/forms/FormGroupDirective\"><code><a href=\"api/forms/FormGroupDirective\">FormGroupDirective</a></code></a> (selector:\n<code>[formGroup]</code>).</p>\n<p>It accepts the string name of the <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a> instance you want to\nlink, and will look for a <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a> registered with that name in the\nclosest <a href=\"api/forms/FormGroup\"><code><a href=\"api/forms/FormGroup\">FormGroup</a></code></a> or <a href=\"api/forms/FormArray\"><code><a href=\"api/forms/FormArray\">FormArray</a></code></a> above it.</p>\n<p><strong>Access the control</strong>: You can access the <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a> associated with\nthis directive by using the <a href=\"api/forms/AbstractControl#get\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> method.\nEx: <code>this.form.get('first');</code></p>\n<p><strong>Get value</strong>: the <code>value</code> property is always synced and available on the <a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a>.\nSee a full list of available properties in <a href=\"api/forms/AbstractControl\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a>.</p>\n<p> <strong>Set value</strong>: You can set an initial value for the control when instantiating the\n<a href=\"api/forms/FormControl\"><code><a href=\"api/forms/FormControl\">FormControl</a></code></a>, or you can set it programmatically later using\n<a href=\"api/forms/AbstractControl#setValue\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> or <a href=\"api/forms/AbstractControl#patchValue\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a>.</p>\n<p><strong>Listen to value</strong>: If you want to listen to changes in the value of the control, you can\nsubscribe to the <a href=\"api/forms/AbstractControl#valueChanges\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> event.  You can also listen to\n<a href=\"api/forms/AbstractControl#statusChanges\"><code><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></a> to be notified when the validation status is\nre-calculated.</p>\n<h3 id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<p>In this example, we create form controls for first name and last name.</p>\n<code-example>\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'example-app',\n  template: `\n    &#x3C;form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      &#x3C;div *ngIf=\"first.invalid\"> Name is too short. &#x3C;/div>\n\n      &#x3C;input formControlName=\"first\" placeholder=\"First name\">\n      &#x3C;input formControlName=\"last\" placeholder=\"Last name\">\n\n      &#x3C;button type=\"submit\">Submit&#x3C;/button>\n   &#x3C;/form>\n   &#x3C;button (click)=\"setValue()\">Set preset value&#x3C;/button>\n  `,\n})\nexport class SimpleFormGroup {\n  form = new FormGroup({\n    first: new FormControl('Nancy', Validators.minLength(2)),\n    last: new FormControl('Drew'),\n  });\n\n  get first(): any { return this.form.get('first'); }\n\n  onSubmit(): void {\n    console.log(this.form.value);  // {first: 'Nancy', last: 'Drew'}\n  }\n\n  setValue() { this.form.setValue({first: 'Carson', last: 'Drew'}); }\n}\n\n\n\n</code-example>\n<p>To see <code>formControlName</code> examples with different form control types, see:</p>\n<ul>\n<li>Radio buttons: <a href=\"api/forms/RadioControlValueAccessor\"><code><a href=\"api/forms/RadioControlValueAccessor\">RadioControlValueAccessor</a></code></a></li>\n<li>Selects: <a href=\"api/forms/SelectControlValueAccessor\"><code><a href=\"api/forms/SelectControlValueAccessor\">SelectControlValueAccessor</a></code></a></li>\n</ul>\n<p><strong>npm package</strong>: <code>@angular/forms</code></p>\n<p><strong>NgModule</strong>: <a href=\"api/forms/ReactiveFormsModule\"><code><a href=\"api/forms/ReactiveFormsModule\">ReactiveFormsModule</a></code></a></p>\n\n</section>\n\n\n  \n\n<section class=\"selectors\">\n  <h2 id=\"selectors\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#selectors\"><i class=\"material-icons\">link</i></a>Selectors</h2>\n  \n  <div class=\"selector\">\n    <code>[formControlName]</code>\n  </div>\n  \n</section>\n\n\n  \n<section class=\"inputs\">\n  <h2 id=\"inputs\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#inputs\"><i class=\"material-icons\">link</i></a>Inputs</h2>\n  \n  <div class=\"input\">\n    <code>formControlName</code> bound to <code>FormControlName.name</code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>ngModel</code> bound to <code>FormControlName.model</code>\n    \n  </div>\n  \n  <div class=\"input\">\n    <code>disabled</code> bound to <code>FormControlName.isDisabled</code>\n    \n  </div>\n  \n</section>\n\n  \n<section class=\"outputs\">\n  <h2 id=\"outputs\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#outputs\"><i class=\"material-icons\">link</i></a>Outputs</h2>\n  \n  <div class=\"output\">\n    <code>ngModelChange</code> bound to <code>FormControlName.update</code>\n    \n  </div>\n  \n</section>\n\n  \n\n\n\n\n\n\n\n<section class=\"constructor\">\n  <a id=\"constructor\"></a>\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">constructor(parent: ControlContainer, validators: Array&#x3C;Validator|ValidatorFn>, asyncValidators: Array&#x3C;AsyncValidator|AsyncValidatorFn>, valueAccessors: ControlValueAccessor[])</code-example>\n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"name\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">name: string</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"model\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">model: any</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"update\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">update: new EventEmitter()</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"isDisabled\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">set isDisabled(isDisabled: boolean)</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"ngOnChanges\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">ngOnChanges(changes: SimpleChanges)</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"ngOnDestroy\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">ngOnDestroy(): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"viewToModelUpdate\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">viewToModelUpdate(newValue: any): void</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"path\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get path(): string[]</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"formDirective\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get formDirective(): any</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"validator\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get validator(): ValidatorFn|null</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"asyncValidator\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get asyncValidator(): AsyncValidatorFn</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"control\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">get control(): FormControl</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n<section class=\"annotations\">\n  <h2 id=\"annotations\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormControlName#annotations\"><i class=\"material-icons\">link</i></a>Annotations</h2>\n    <code-example hidecopy=\"true\" class=\"no-box api-heading\">@Directive({selector: '[formControlName]', providers: [controlNameBinding]})</code-example>\n    \n  \n</section>\n\n\n\n\n\n\n</section></article>"
}