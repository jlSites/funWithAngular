{
  "id": "api/common/SlicePipe",
  "title": "SlicePipe",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"slicepipe\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#slicepipe\"><i class=\"material-icons\">link</i></a>SlicePipe</h1>\n    <label class=\"api-type-label pipe\">pipe</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/common\">@angular/common</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { SlicePipe } from <a href=\"api/common\">@angular/common</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/4.3.0-rc.0/packages/common/src/pipes/slice_pipe.ts#L11-L70\">common/src/pipes/slice_pipe.ts</a></td>\n</tr>\n\n<tr>\n  <th>NgModule</th>\n  <td><a href=\"api/common/CommonModule\"><code><a href=\"api/common/CommonModule\">CommonModule</a></code></a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p>Creates a new List or String containing a subset (slice) of the elements.</p>\n\n</div>\n\n  \n  \n  \n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <p><code>array_or_string_expression | slice:start[:end]</code></p>\n\n</section>\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p>Where the input expression is a <code>List</code> or <code>String</code>, and:</p>\n<ul>\n<li>\n<p><code>start</code>: The starting index of the subset to return.</p>\n<ul>\n<li><strong>a positive integer</strong>: return the item at <code>start</code> index and all items after\nin the list or string expression.</li>\n<li><strong>a negative integer</strong>: return the item at <code>start</code> index from the end and all items after\nin the list or string expression.</li>\n<li><strong>if positive and greater than the size of the expression</strong>: return an empty list or string.</li>\n<li><strong>if negative and greater than the size of the expression</strong>: return entire list or string.</li>\n</ul>\n</li>\n<li>\n<p><code>end</code>: The ending index of the subset to return.</p>\n<ul>\n<li><strong>omitted</strong>: return all items until the end.</li>\n<li><strong>if positive</strong>: return all items before <code>end</code> index of the list or string.</li>\n<li><strong>if negative</strong>: return all items before <code>end</code> index from the end of the list or string.</li>\n</ul>\n</li>\n</ul>\n<p>All behavior is based on the expected behavior of the JavaScript API <code>Array.prototype.slice()</code>\nand <code>String.prototype.slice()</code>.</p>\n<p>When operating on a [List], the returned list is always a copy even when all\nthe elements are being returned.</p>\n<p>When operating on a blank value, the pipe returns the blank value.</p>\n<h2 id=\"list-example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#list-example\"><i class=\"material-icons\">link</i></a>List Example</h2>\n<p>This <code>ngFor</code> example:</p>\n<code-example>\n@Component({\n  selector: 'slice-list-pipe',\n  template: `&#x3C;ul>\n    &#x3C;li *ngFor=\"let i of collection | slice:1:3\">{{i}}&#x3C;/li>\n  &#x3C;/ul>`\n})\nexport class SlicePipeListComponent {\n  collection: string[] = ['a', 'b', 'c', 'd'];\n}\n\n</code-example>\n<p>produces the following:</p>\n    <li>b</li>\n    <li>c</li>\n<h2 id=\"string-examples\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/SlicePipe#string-examples\"><i class=\"material-icons\">link</i></a>String Examples</h2>\n<code-example>\n@Component({\n  selector: 'slice-string-pipe',\n  template: `&#x3C;div>\n    &#x3C;p>{{str}}[0:4]: '{{str | slice:0:4}}' - output is expected to be 'abcd'&#x3C;/p>\n    &#x3C;p>{{str}}[4:0]: '{{str | slice:4:0}}' - output is expected to be ''&#x3C;/p>\n    &#x3C;p>{{str}}[-4]: '{{str | slice:-4}}' - output is expected to be 'ghij'&#x3C;/p>\n    &#x3C;p>{{str}}[-4:-2]: '{{str | slice:-4:-2}}' - output is expected to be 'gh'&#x3C;/p>\n    &#x3C;p>{{str}}[-100]: '{{str | slice:-100}}' - output is expected to be 'abcdefghij'&#x3C;/p>\n    &#x3C;p>{{str}}[100]: '{{str | slice:100}}' - output is expected to be ''&#x3C;/p>\n  &#x3C;/div>`\n})\nexport class SlicePipeStringComponent {\n  str: string = 'abcdefghij';\n}\n\n</code-example>\n\n</section>\n\n\n\n\n</section></article>"
}