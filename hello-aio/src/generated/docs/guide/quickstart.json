{
  "id": "guide/quickstart",
  "title": "QuickStart",
  "contents": "\n<div class=\"content\">\n<h1 id=\"quickstart\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#quickstart\"><i class=\"material-icons\">link</i></a>QuickStart</h1>\n<p>Good tools make application development quicker and easier to maintain than\nif you did everything by hand.</p>\n<p>The <a href=\"https://cli.angular.io/\"><strong>Angular CLI</strong></a> is a <strong><em>command line interface</em></strong> tool\nthat can create a project, add files, and perform a variety of ongoing development tasks such\nas testing, bundling, and deployment.</p>\n<p>The goal in this guide is to build and run a simple Angular\napplication in TypeScript, using the Angular CLI\nwhile adhering to the <a href=\"guide/styleguide\">Style Guide</a> recommendations that\nbenefit <em>every</em> Angular project.</p>\n<p>By the end of the chapter, you'll have a basic understanding of development with the CLI\nand a foundation for both these documentation samples and for real world applications.</p>\n<!--\n\nYou'll pursue these ends in the following high-level steps:\n\n1. [Set up](guide/cli-quickstart#devenv) the development environment.\n2. [Create](guide/cli-quickstart#create-proj) a new project and skeleton application.\n3. [Serve](guide/cli-quickstart#serve) the application.\n4. [Edit](guide/cli-quickstart#first-component) the application.\n\n-->\n<p>And you can also <a href=\"generated/zips/cli-quickstart/cli-quickstart.zip\" target=\"_blank\">download the example.</a></p>\n<h2 id=\"devenv\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#devenv\"><i class=\"material-icons\">link</i></a>\n  Step 1. Set up the Development Environment\n</h2>\n<p>You need to set up your development environment before you can do anything.</p>\n<p>Install <strong><a href=\"https://nodejs.org/en/download/\">Node.jsÂ® and npm</a></strong>\nif they are not already on your machine.</p>\n<div class=\"l-sub-section\">\n<p><strong>Verify that you are running at least node <code>6.9.x</code> and npm <code>3.x.x</code></strong>\nby running <code>node -v</code> and <code>npm -v</code> in a terminal/console window.\nOlder versions produce errors, but newer versions are fine.</p>\n</div>\n<p>Then <strong>install the <a href=\"https://github.com/angular/angular-cli\">Angular CLI</a></strong> globally.</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  npm install -g @angular/cli\n\n</code-example>\n<h2 id=\"create-proj\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#create-proj\"><i class=\"material-icons\">link</i></a>\n  Step 2. Create a new project\n</h2>\n<p>Open a terminal window.</p>\n<p>Generate a new project and skeleton application by running the following commands:</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  ng new my-app\n\n</code-example>\n<div class=\"l-sub-section\">\n<p>Patience please.\nIt takes time to set up a new project, most of it spent installing npm packages.</p>\n</div>\n<h2 id=\"serve\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#serve\"><i class=\"material-icons\">link</i></a>\n  Step 3: Serve the application\n</h2>\n<p>Go to the project directory and launch the server.</p>\n<code-example language=\"sh\" class=\"code-shell\">\n  cd my-app\n  ng serve --open\n\n</code-example>\n<p>The <code>ng serve</code> command launches the server, watches your files,\nand rebuilds the app as you make changes to those files.</p>\n<p>Using the <code>--open</code> (or just <code>-o</code>) option will automatically open your browser\non <code>http://localhost:4200/</code>.</p>\n<p>Your app greets you with a message:</p>\n<figure>\n  <img src=\"generated/images/guide/cli-quickstart/app-works.png\" alt=\"The app works!\" width=\"297\" height=\"348\">\n</figure>\n<h2 id=\"first-component\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#first-component\"><i class=\"material-icons\">link</i></a>\n  Step 4: Edit your first Angular component\n</h2>\n<p>The CLI created the first Angular component for you.\nThis is the <em>root component</em> and it is named <code>app-root</code>.\nYou can find it in <code>./src/app/app.component.ts</code>.</p>\n<p>Open the component file and change the <code>title</code> property from <em>Welcome to app!!</em> to <em>Welcome to My First Angular App!!</em>:</p>\n<code-example path=\"cli-quickstart/src/app/app.component.ts\" region=\"title\" title=\"src/app/app.component.ts\" linenums=\"false\">\nexport class AppComponent {\n  title = 'My First Angular App';\n}\n\n</code-example>\n<p>The browser reloads automatically with the revised title. That's nice, but it could look better.</p>\n<p>Open <code>src/app/app.component.css</code> and give the component some style.</p>\n<code-example path=\"cli-quickstart/src/app/app.component.css\" title=\"src/app/app.component.css\" linenums=\"false\">\nh1 {\n  color: #369;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 250%;\n}\n\n\n</code-example>\n<figure>\n  <img src=\"generated/images/guide/cli-quickstart/my-first-app.png\" alt=\"Output of QuickStart app\" width=\"689\" height=\"66\">\n</figure>\n<p>Looking good!</p>\n<h2 id=\"whats-next\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#whats-next\"><i class=\"material-icons\">link</i></a>What's next?</h2>\n<p>That's about all you'd expect to do in a \"Hello, World\" app.</p>\n<p>You're ready to take the <a href=\"tutorial\">Tour of Heroes Tutorial</a> and build\na small application that demonstrates the great things you can build with Angular.</p>\n<p>Or you can stick around a bit longer to learn about the files in your brand new project.</p>\n<h2 id=\"project-file-review\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#project-file-review\"><i class=\"material-icons\">link</i></a>Project file review</h2>\n<p>An Angular CLI project is the foundation for both quick experiments and enterprise solutions.</p>\n<p>The first file you should check out is <code>README.md</code>.\nIt has some basic information on how to use CLI commands.\nWhenever you want to know more about how Angular CLI works make sure to visit\n<a href=\"https://github.com/angular/angular-cli\">the Angular CLI repository</a> and\n<a href=\"https://github.com/angular/angular-cli/wiki\">Wiki</a>.</p>\n<p>Some of the generated files might be unfamiliar to you.</p>\n<h3 id=\"the-src-folder\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#the-src-folder\"><i class=\"material-icons\">link</i></a>The <code>src</code> folder</h3>\n<p>Your app lives in the <code>src</code> folder.\nAll Angular components, templates, styles, images, and anything else your app needs go here.\nAny files outside of this folder are meant to support building your app.</p>\n<div class=\"filetree\">\n  <div class=\"file\">src</div>\n  <div class=\"children\">\n    <div class=\"file\">app</div>\n    <div class=\"children\">\n      <div class=\"file\">app.component.css</div>\n      <div class=\"file\">app.component.html</div>\n      <div class=\"file\">app.component.spec.ts</div>\n      <div class=\"file\">app.component.ts</div>\n      <div class=\"file\">app.module.ts</div>\n    </div>\n    <div class=\"file\">assets</div>\n    <div class=\"children\">\n      <div class=\"file\">.gitkeep</div>\n    </div>\n    <div class=\"file\">environments</div>\n    <div class=\"children\">\n      <div class=\"file\">environment.prod.ts</div>\n      <div class=\"file\">environment.ts</div>\n    </div>\n    <div class=\"file\">favicon.ico</div>\n    <div class=\"file\">index.html</div>\n    <div class=\"file\">main.ts</div>\n    <div class=\"file\">polyfills.ts</div>\n    <div class=\"file\">styles.css</div>\n    <div class=\"file\">test.ts</div>\n    <div class=\"file\">tsconfig.app.json</div>\n    <div class=\"file\">tsconfig.spec.json</div>\n  </div>\n</div>\n<style>\n  td, th {vertical-align: top}\n</style>\n<table width=\"100%\">\n  <colgroup><col width=\"20%\">\n  \n  <col width=\"80%\">\n  \n  </colgroup><tbody><tr>\n    <th>\n      File\n    </th>\n    <th>\n      Purpose\n    </th>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>app/app.component.{ts,html,css,spec.ts}</code></p>\n    </td>\n    <td>\n<p>      Defines the <code>AppComponent</code> along with an HTML template, CSS stylesheet, and a unit test.\nIt is the <strong>root</strong> component of what will become a tree of nested components\nas the application evolves.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>app/app.module.ts</code></p>\n    </td>\n    <td>\n<p>      Defines <code>AppModule</code>, the <a href=\"guide/bootstrapping\" title=\"AppModule: the root module\">root module</a> that tells Angular how to assemble the application.\nRight now it declares only the <code>AppComponent</code>.\nSoon there will be more components to declare.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>assets/*</code></p>\n    </td>\n    <td>\n<p>      A folder where you can put images and anything else to be copied wholesale\nwhen you build your application.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>environments/*</code></p>\n    </td>\n    <td>\n<p>      This folder contains one file for each of your destination environments,\neach exporting simple configuration variables to use in your application.\nThe files are replaced on-the-fly when you build your app.\nYou might use a different API endpoint for development than you do for production\nor maybe different analytics tokens.\nYou might even use some mock services.\nEither way, the CLI has you covered.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>favicon.ico</code></p>\n    </td>\n    <td>\n<p>      Every site wants to look good on the bookmark bar.\nGet started with your very own Angular icon.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>index.html</code></p>\n    </td>\n    <td>\n<p>      The main HTML page that is served when someone visits your site.\nMost of the time you'll never need to edit it.\nThe CLI automatically adds all <code>js</code> and <code>css</code> files when building your app so you\nnever need to add any <code>&#x3C;script></code> or <code>&#x3C;link></code> tags here manually.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>main.ts</code></p>\n    </td>\n    <td>\n<p>      The main entry point for your app.\nCompiles the application with the <a href=\"guide/glossary#jit\">JIT compiler</a>\nand bootstraps the application's root module (<code>AppModule</code>) to run in the browser.\nYou can also use the <a href=\"guide/glossary#ahead-of-time-aot-compilation\">AOT compiler</a>\nwithout changing any code by passing in <code>--aot</code> to <code>ng build</code> or <code>ng serve</code>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>polyfills.ts</code></p>\n    </td>\n    <td>\n<p>      Different browsers have different levels of support of the web standards.\nPolyfills help normalize those differences.\nYou should be pretty safe with <code>core-js</code> and <code>zone.js</code>, but be sure to check out\nthe <a href=\"guide/browser-support\">Browser Support guide</a> for more information.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>styles.css</code></p>\n    </td>\n    <td>\n<p>      Your global styles go here.\nMost of the time you'll want to have local styles in your components for easier maintenance,\nbut styles that affect all of your app need to be in a central place.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>test.ts</code></p>\n    </td>\n    <td>\n<p>      This is the main entry point for your unit tests.\nIt has some custom configuration that might be unfamiliar, but it's not something you'll\nneed to edit.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>tsconfig.{app|spec}.json</code></p>\n    </td>\n    <td>\n<p>      TypeScript compiler configuration for the Angular app (<code>tsconfig.app.json</code>)\nand for the unit tests (<code>tsconfig.spec.json</code>).</p>\n    </td>\n  </tr>\n</tbody></table>\n<h3 id=\"the-root-folder\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#the-root-folder\"><i class=\"material-icons\">link</i></a>The root folder</h3>\n<p>The <code>src/</code> folder is just one of the items inside the project's root folder.\nOther files help you build, test, maintain, document, and deploy the app.\nThese files go in the root folder next to <code>src/</code>.</p>\n<div class=\"filetree\">\n  <div class=\"file\">my-app</div>\n  <div class=\"children\">\n    <div class=\"file\">e2e</div>\n    <div class=\"children\">\n      <div class=\"file\">app.e2e-spec.ts</div>\n      <div class=\"file\">app.po.ts</div>\n      <div class=\"file\">tsconfig.e2e.json</div>\n    </div>\n    <div class=\"file\">node_modules/...</div>\n    <div class=\"file\">src/...</div>\n    <div class=\"file\">.angular-cli.json</div>\n    <div class=\"file\">.editorconfig</div>\n    <div class=\"file\">.gitignore</div>\n    <div class=\"file\">karma.conf.js</div>\n    <div class=\"file\">package.json</div>\n    <div class=\"file\">protractor.conf.js</div>\n    <div class=\"file\">README.md</div>\n    <div class=\"file\">tsconfig.json</div>\n    <div class=\"file\">tslint.json</div>\n  </div>\n</div>\n<style>\n  td, th {vertical-align: top}\n</style>\n<table width=\"100%\">\n  <colgroup><col width=\"20%\">\n  \n  <col width=\"80%\">\n  \n  </colgroup><tbody><tr>\n    <th>\n      File\n    </th>\n    <th>\n      Purpose\n    </th>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>e2e/</code></p>\n    </td>\n    <td>\n<p>      Inside <code>e2e/</code> live the end-to-end tests.\nThey shouldn't be inside <code>src/</code> because e2e tests are really a separate app that\njust so happens to test your main app.\nThat's also why they have their own <code>tsconfig.e2e.json</code>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>node_modules/</code></p>\n    </td>\n    <td>\n<p>      <code>Node.js</code> creates this folder and puts all third party modules listed in\n<code>package.json</code> inside of it.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>.angular-cli.json</code></p>\n    </td>\n    <td>\n<p>      Configuration for Angular CLI.\nIn this file you can set several defaults and also configure what files are included\nwhen your project is built.\nCheck out the official documentation if you want to know more.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>.editorconfig</code></p>\n    </td>\n    <td>\n<p>      Simple configuration for your editor to make sure everyone that uses your project\nhas the same basic configuration.\nMost editors support an <code>.editorconfig</code> file.\nSee <a href=\"http://editorconfig.org\">http://editorconfig.org</a> for more information.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>.gitignore</code></p>\n    </td>\n    <td>\n<p>      Git configuration to make sure autogenerated files are not commited to source control.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>karma.conf.js</code></p>\n    </td>\n    <td>\n<p>      Unit test configuration for the <a href=\"https://karma-runner.github.io\">Karma test runner</a>,\nused when running <code>ng test</code>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>package.json</code></p>\n    </td>\n    <td>\n<p>      <code>npm</code> configuration listing the third party packages your project uses.\nYou can also add your own <a href=\"https://docs.npmjs.com/misc/scripts\">custom scripts</a> here.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>protractor.conf.js</code></p>\n    </td>\n    <td>\n<p>      End-to-end test configuration for <a href=\"http://www.protractortest.org/\">Protractor</a>,\nused when running <code>ng e2e</code>.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>README.md</code></p>\n    </td>\n    <td>\n<p>      Basic documentation for your project, pre-filled with CLI command information.\nMake sure to enhance it with project documentation so that anyone\nchecking out the repo can build your app!</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>tsconfig.json</code></p>\n    </td>\n    <td>\n<p>      TypeScript compiler configuration for your IDE to pick up and give you helpful tooling.</p>\n    </td>\n  </tr>\n  <tr>\n    <td>\n<p>      <code>tslint.json</code></p>\n    </td>\n    <td>\n<p>      Linting configuration for <a href=\"https://palantir.github.io/tslint/\">TSLint</a> together with\n<a href=\"http://codelyzer.com/\">Codelyzer</a>, used when running <code>ng lint</code>.\nLinting helps keep your code style consistent.</p>\n    </td>\n  </tr>\n</tbody></table>\n<div class=\"l-sub-section\">\n<h3 id=\"next-step\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/quickstart#next-step\"><i class=\"material-icons\">link</i></a>Next Step</h3>\n<p>If you're new to Angular, continue with the\n<a href=\"tutorial\" title=\"Tour of Heroes tutorial\">tutorial</a>.\nYou can skip the \"Setup\" step since you're already using the Angular CLI setup.</p>\n</div>\n\n</div>"
}